"Content"
"        package localhost80.sample1;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.AsyncTask;&#xD;&#xA;        import android.widget.Toast;&#xD;&#xA;        import org.apache.http.HttpResponse;&#xD;&#xA;        import org.apache.http.client.HttpClient;&#xD;&#xA;        import org.apache.http.client.methods.HttpGet;&#xD;&#xA;        import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;        import java.io.BufferedWriter;&#xD;&#xA;        import java.io.IOException;&#xD;&#xA;        import java.io.InputStream;&#xD;&#xA;        import java.io.OutputStream;&#xD;&#xA;        import java.io.OutputStreamWriter;&#xD;&#xA;        import java.net.HttpURLConnection;&#xD;&#xA;        import java.net.MalformedURLException;&#xD;&#xA;        import java.net.URI;&#xD;&#xA;        import java.net.URL;&#xD;&#xA;        import java.net.URLEncoder;&#xD;&#xA;        public class serverLinking extends AsyncTask<String, Void, String>&#xD;&#xA;        {&#xD;&#xA;    private String link;&#xD;&#xA;    private Context context;&#xD;&#xA;    private String ed,lno,par,pcs,mts,wt,ct,var,gw,fw,remarks,method;&#xD;&#xA;    public serverLinking(Context context)&#xD;&#xA;    {&#xD;&#xA;        this.context = context;&#xD;&#xA;    }&#xD;&#xA;    protected void onPreExecute()&#xD;&#xA;    {&#xD;&#xA;        super.onPreExecute();&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    protected String doInBackground(String... arg0)&#xD;&#xA;    {&#xD;&#xA;            method = arg0[11];&#xD;&#xA;            link = """"http://192.168.0.104/narmadaa_trial1/android/add.php"""";&#xD;&#xA;            if(method.equals(""""POST""""))&#xD;&#xA;            {&#xD;&#xA;                ed = arg0[0];&#xD;&#xA;                lno = arg0[1];&#xD;&#xA;                par = arg0[2];&#xD;&#xA;                pcs = arg0[3];&#xD;&#xA;                mts = arg0[4];&#xD;&#xA;                wt = arg0[5];&#xD;&#xA;                ct = arg0[6];&#xD;&#xA;                var = arg0[7];&#xD;&#xA;                gw = arg0[8];&#xD;&#xA;                fw = arg0[9];&#xD;&#xA;                remarks = arg0[10];&#xD;&#xA;                try&#xD;&#xA;                {&#xD;&#xA;                    URL url = new URL(link);&#xD;&#xA;                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();&#xD;&#xA;                    httpURLConnection.setRequestMethod(method);&#xD;&#xA;                    httpURLConnection.setDoOutput(true);&#xD;&#xA;                    OutputStream os = httpURLConnection.getOutputStream();&#xD;&#xA;                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(os,""""UTF-8""""));&#xD;&#xA;                    String data = URLEncoder.encode(""""ed"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""lno"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""par"""",""""UTF-8"""")+""""=""""+&#xD;&#xA;                            URLEncoder.encode(""""pcs"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""mts"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""wt"""",""""UTF-8"""")+""""=""""+&#xD;&#xA;                            URLEncoder.encode(""""ct"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""var"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""gw"""",""""UTF-8"""")+""""=""""+&#xD;&#xA;                            URLEncoder.encode(""""fw"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""remarks"""",""""UTF-8"""");&#xD;&#xA;                    bufferedWriter.write(data);&#xD;&#xA;                    bufferedWriter.flush();&#xD;&#xA;                    bufferedWriter.close();&#xD;&#xA;                    os.close();&#xD;&#xA;                    InputStream IS = httpURLConnection.getInputStream();&#xD;&#xA;                    IS.close();&#xD;&#xA;                    return """"Data Added Successfully"""";&#xD;&#xA;                }&#xD;&#xA;                catch (MalformedURLException e){&#xD;&#xA;                    e.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;                catch (IOException e){&#xD;&#xA;                    e.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        return null;&#xD;&#xA;    }&#xD;&#xA;    protected void onPostExecute(String result)&#xD;&#xA;    {&#xD;&#xA;        Toast.makeText(context,result,Toast.LENGTH_LONG).show();&#xD;&#xA;    }&#xD;&#xA;    protected void onProgressUpdate(Void... values)&#xD;&#xA;    {&#xD;&#xA;        super.onProgressUpdate(values);&#xD;&#xA;    }&#xD;&#xA;        }"
